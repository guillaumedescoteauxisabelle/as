#!/bin/bash
goon=0

#@STCStatus We might have an addon structure
if [ -f "Dockerfile.addon" ]; then #@STCGoal Create an added on to ../_env.sh$dockertag with cdir basename

	if [ -f "Dockerfile" ] ; then _bakfile="Dockerfile.bk$(tlid)" && echo "Dockerfile backup $_bakfile" && mv Dockerfile $_bakfile || echo "FAILED TO BACKUP Dockerfile, assuming that is alright to overrite ;)";fi #@s Backed up the existing dockerfile

	if [ -f "../_env.sh" ] ; then export __env=../_env.sh;else if [ -f "../../_env.sh" ] ; then export __env=../../_env.sh;fi;fi
	#@STCStatus we got a dockertag to add on
	#@STCGoal A rebuild of our envs
	#fix $__env
	dos2unix $__env &> /dev/null && echo "Fixed $__env dos2unix"
	. $__env
	export dockertagroot=$dockertag
	export cname=$(basename $(pwd))
	export dockertag=$dockertagroot"--"$cname
	export containername=$containername"--"$cname

	#Make the Dockerfile using the root dockertag and the addon the build it.
	if [ ! -f "_env.sh" ] ; then #create the non existing _env.sh to further run the thing
		_envfn=_env.sh
		echo ". $__env" > $_envfn
		echo "export dockertagroot=\$dockertag" >> $_envfn
		echo "export cname=\$(basename \$(pwd))"  >> $_envfn
		echo "export dockertag=\$dockertagroot\"--\"\$cname"  >> $_envfn
		echo "export containername=\$containername\"--\"\$cname"  >> $_envfn
		echo "Created $_envfn"
		dos2unix $_envfn
	fi #@s Our _env.sh is created
	#@v Dockerfile created
	echo "FROM $dockertagroot" > Dockerfile && \
		cat Dockerfile.addon >> Dockerfile && \
		dos2unix Dockerfile && \
		echo "Created Dockerfile using addon" || \
		echo "FAILED CREATING Dockerfile"
	echo "Ready to do normal building ;)"


		

fi 
#@STCStatus Ready to Normal build from Added on (the dir should look like the usual docker build dir


#Valid our ENV
if [ -f ".env" ] && [ -f "_env.sh" ]; then
	. _env.sh && . .env && goon=1
fi
if [ -f ".env" ]; then 
	. .env && goon=1	
fi
if [ -f "_env.sh" ]; then
				. _env.sh && goon=1
fi
if [ ! -f ".env" ] && [ ! -f "_env.sh" ]; then

	echo "No env detected. We wont go further."
	echo "Please define it in .env or _env.sh"
else #Do the Whole work

		
# ENV Is Set or not.

if [ "$goon" == 1 ]; then
	goon=1
	tag="$dockertag"
	if [ "$tag" == "" ] ; then  
		tag="$containertag"
		if [ "$tag" == "" ] ; then	
			echo "Please define dockertag or containertag"
			goon=0
		fi
	fi
fi
if [ "$goon" == 1 ]; then
	#finally we do it ;)  Because alll is great
	if [ "$1" == "--no-cache" ] ; then 
		export _nocache="--no-cache"
		export dockerfilepath="."
	else 
		export dockerfilepath="$1"
	fi
	

	if [ -f "Dockerfile" ] && [ "$dockerfilepath" == "" ] ; then 
		dockerfilepath=.
	fi

	if [ -f "$dockerfilepath/Dockerfile" ];
		then 
		 	docker build -t $tag $dockerfilepath $2 $3 $_nocache
		else
			echo "Could not find Dockerfile in path : $dockerfilepath"
	fi
fi




fi 
# We are doing the whole work

# Run post build hooks

if [ -e "_dk-post-build.sh" ] ; then 
	echo "Running Post-Build"

	. _dk-post-build.sh
fi

