#!/bin/bash
#@STCGoal A Docker image is build with the builder username and pushed to the same repo
useremail="jgi@jgwill.com"

. _env.sh && [ "$dockertag" != "" ] && \
if [ "$(uname -s)" == "Linux" ]; then echo "Creating User based image"
	_cuser=$(whoami)
	_uid=$UID
	dockertaguser=$dockertag"-"$_cuser
	cdir="$(pwd)"
	wdir="$cdir/build_user__"$(tlid)
	if [ -e "$wdir" ] ; then echo "Hum... $wdir exist already" && rm -rf $wdir && echo "Cleaned up ok.  Rerun this"
	else

	mkdir -p $wdir
	DKUSERNAME=$_cuser
	DKUID=$_uid
	_dkusehomedir="WORKDIR ${HOME}"
	_dkuserchg="USER $DKUSERNAME"
	if [ "$dknouserchg" != "" ]; then _dkuserchg="";fi #No USER change

	#@STCGoal change back to another existing user
	if [ "$dkchguser" != "" ] ; then _dkuserchg="USER $dkchguser";fi #USER chg to defined one

	# Make the workdir the user home ??
	#echo "$_dkusehomedir" && exit 1

	if [ "$dkusehomedir" == "" ] ||  [ "$dkusehomedir" == "false" ] ; then _dkusehomedir="";fi


	#vscode server
	_vscodetar="vscode-server-$DKUSERNAME.tar.gz"
	_vscodetarpath="$cdir/$_vscodetar"
	#if [ -e "$_vscodetar" ]; then  _vscodeservercp="COPY $_vscodetar .";_vscodeserverinstall="RUN tar xzf $_vscodetar && mv .vscode-server .gitconfig /home/$DKUSERNAME && rm $_vscodetar && chown -R $DKUSERNAME /home/$DKUSERNAME";fi

#dk user added to group
dkusergroup=root
_dkenvuser="ENV USER $DKUSERNAME"
_dkenvhome='ENV HOME /home/${USER}'
#
	_gituseremail="RUN git config --global user.email \"$useremail\""
	_gitusername="RUN git config --global user.name \"$DKUSERNAME\""

	cd $wdir && \
		echo "FROM $dockertag" >> Dockerfile && \
		echo "$_dkenvuser" >> Dockerfile && \
		echo "$_dkenvhome" >> Dockerfile && \
		echo "USER root" >> Dockerfile && \
		echo "RUN useradd -rm -d \${HOME} -s /bin/bash -g $dkusergroup -G sudo -u $DKUID $DKUSERNAME || sudo useradd -rm -d \${HOME} -s /bin/bash -g $dkusergroup -G sudo -u $DKUID $DKUSERNAME" >> Dockerfile && \
		echo "RUN adduser $DKUSERNAME sudo || sudo adduser $DKUSERNAME sudo " >> Dockerfile && \
		echo "RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers || sudo echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers" >> Dockerfile && \
		echo "#ENV TZ=\"America/New_York\"" >> Dockerfile && \
		if [ -e "$_vscodetar" ]; then  cp $cdir/$_vscodetar $wdir;fi && \
		echo "$_vscodeservercp " >> Dockerfile && \ 
		echo "$_vscodeserverinstall " >> Dockerfile && \
		echo "$_dkuserchg "  >> Dockerfile && \
		echo "$_dkusehomedir " >> Dockerfile && \
		echo "$_gituseremail " >> Dockerfile && \
		echo "$_gitusername "  >> Dockerfile && \
		if [ -f "../.dkbuildx" ]; then cat ../.dkbuildx >> Dockerfile ; fi && \
		echo "$dkbuildmorerun " >> Dockerfile && \
		echo "$dkbuildmorerun2 " >> Dockerfile && \
		echo "$dkbuildmorerun3 " >> Dockerfile && \
		echo "Created Dockerfile" && cat Dockerfile && \
		docker build -t $dockertaguser . && \
			if [ -e "$_vscodetar" ]; then  rm $wdir/$_vscodetar;fi && \
			docker push $dockertaguser && rm -rf $wdir && echo "Created image : $dockertaguser" && echo "All done and cleanup" || \
			echo "FAILED SOMEWHOW"
		#cp $binroot/templates/Dockerfile-user Dockerfile && \

	fi # done folder did not exist

		#__DOCKERTAG__ DKUSERNAME  DKUID




	

else
	echo "Please run this on linux or upgrade to run using WSL"
fi || \
		echo "Please create _env.sh or be somewhere where these is that ;) and define dockertag"
